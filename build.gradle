plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'java'
	id "io.franzbecker.gradle-lombok" version "3.0.0"
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'be.shop'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	asciidoctorExtensions
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//querydsl
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0'
	implementation 'com.querydsl:querydsl-jpa'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"

	//mySql
	runtimeOnly 'mysql:mysql-connector-java'
	implementation group: 'org.javassist', name: 'javassist', version: '3.29.0-GA'
	runtimeOnly "org.mariadb.jdbc:mariadb-java-client"

	//Lombok & Mapstruct
	implementation 'org.projectlombok:lombok'
	implementation 'org.mapstruct:mapstruct:1.5.1.Final'
	implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.1.Final'
	annotationProcessor 'org.projectlombok:lombok'

	//swagger
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'

	//rest docs
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'

	//스프링 시큐리티
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'

	//jwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

	//email auth
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation group: 'com.sun.mail', name: 'javax.mail', version: '1.4.7'
	implementation group: 'org.springframework', name: 'spring-context-support', version: '5.2.6.RELEASE'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.redisson:redisson-spring-boot-starter:3.16.3'
	implementation (group: 'it.ozimov', name: 'embedded-redis', version: '0.7.3') {
		exclude group: 'org.slf4j', module: 'slf4j-simple'
	}

	//feign client
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '3.1.1'
}

ext {
	snippetsDir = file('build/generated-snippets')
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	configurations 'asciidoctorExtensions'
	inputs.dir snippetsDir
	dependsOn test
}

//asciidoctor.doFirst {
//	delete file('src/main/resources/static/docs')
//}

bootJar {
	dependsOn asciidoctor
	copy {
		from file("build/docs/asciidoc")
		into file("src/main/resources/static/docs")
	}
}

build {
	dependsOn bootJar
}

clean {
	delete file('src/main/generated')
}
